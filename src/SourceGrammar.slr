%module SampleGrammar 

%import Grammar

%tokens 
_         " |\n"
PlusT     "\+"
MultT     "\*"
VarT      "[0-9]+"
LBraceT   "\("
RBraceT   "\)"

%attributes
value
repr


%grammar
E -> E PlusT T          [value = {$0.value + $2.value}, repr = {$0.repr}]   
   | T                  [value = {$0.value}, repr = {$0.repr}]              

T -> T MultT F          [value = {$0.value * $2.value}, repr = {$0.repr}]   
   | F                  [value = {$0.value}, repr = {$0.repr}]                      

F -> LBraceT E RBraceT  [value = {$1.value}, repr = {$1.repr}]      
   | VarT               [value = {(read $0) :: Int}, repr = {$0}]           



